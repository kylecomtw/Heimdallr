Terminals unused in grammar

   END
   COMMENT_HEAD
   HASH
   LEN


State 24 conflicts: 3 shift/reduce
State 26 conflicts: 1 shift/reduce
State 55 conflicts: 3 shift/reduce
State 56 conflicts: 1 shift/reduce
State 124 conflicts: 1 shift/reduce


Grammar

    0 $accept: rule_set $end

    1 rule_set: rule_list

    2 rule_list: rule_list rule
    3          | rule

    4 rule: rule_head node_list
    5     | rule_head rule_aux node_list
    6     | comments node_list

    7 rule_aux: prop_list
    8         | rule_cons_list
    9         | rule_aux prop_list
   10         | rule_aux rule_cons_list

   11 node_list: node_list node
   12          | node
   13          | node_list node_conn_op node

   14 node: GROUP_START node_content GROUP_END
   15     | LEFT_P node_list RIGHT_P
   16     | LEFT_P node_set RIGHT_P
   17     | LEFT_SB node RIGHT_SB
   18     | head_node

   19 node_set: node_set VBAR node
   20         | node VBAR node

   21 head_node: LEFT_AB node RIGHT_AB
   22          | LEFT_AB ROOT RIGHT_AB

   23 node_content: CARET
   24             | DOLLAR
   25             | AT INT
   26             | TERM AT INT
   27             | tree_pos
   28             | QSTRING
   29             | DOT DOT DOT QSTRING
   30             | DOT DOT DOT QSTRING DOT DOT DOT
   31             | QSTRING DOT DOT DOT
   32             | SEQ COLON tree_pos
   33             | tree_var COLON tree_pos
   34             | tree_var COLON tree_pos COLON QSTRING
   35             | tree_var COLON QSTRING
   36             | tree_var node_constraint
   37             | tree_var node_constraint COLON tree_pos
   38             | tree_var node_constraint COLON QSTRING
   39             | tree_pos COLON QSTRING
   40             | tree_pos COLON ref

   41 ref: INT

   42 tree_var: TREE
   43         | PTREE

   44 tree_pos: ASTERISK
   45         | STRING

   46 node_constraint: DOT STRING DOT STRING
   47                | AT STRING
   48                | DOT STRING
   49                | DOT TILDE STRING
   50                | DOT TILDE STRING DOT STRING

   51 rule_head: comments rule_info
   52          | rule_info

   53 rule_info: INT COLON
   54          | INT COLON STRING COLON
   55          | INT COLON STRING COLON STRING COLON

   56 rule_cons_list: rule_constraint
   57               | rule_cons_list rule_constraint

   58 rule_constraint: valence constraint_expr
   59                | valence constraint_expr COLON INT

   60 constraint_expr: STRING LEFT_P INT RIGHT_P rel_op STRING
   61                | STRING LEFT_P INT RIGHT_P
   62                | STRING LEFT_P RIGHT_P
   63                | STRING rel_op STRING

   64 prop_list: prop_expr
   65          | prop_list prop_expr

   66 prop_expr: PERCT STRING COLON QSTRING

   67 comments: COMMENTSTR
   68         | comments COMMENTSTR

   69 valence: PLUS
   70        | MINUS
   71        | EQUAL

   72 rel_op: EQUAL_OP
   73       | NOT_EQUAL_OP
   74       | LIKE
   75       | EQUAL

   76 node_conn_op: LEFT_ARROW
   77             | RIGHT_ARROW
   78             | UD_LINK
   79             | FOLLOW


Terminals, with rules where they appear

$end (0) 0
error (256)
END (258)
COMMENT_HEAD (259)
GROUP_START (260) 14
GROUP_END (261) 14
LEFT_AB (262) 21 22
RIGHT_AB (263) 21 22
LEFT_SB (264) 17
RIGHT_SB (265) 17
LEFT_P (266) 15 16 60 61 62
RIGHT_P (267) 15 16 60 61 62
COLON (268) 32 33 34 35 37 38 39 40 53 54 55 59 66
ASTERISK (269) 44
VBAR (270) 19 20
HASH (271)
DOT (272) 29 30 31 46 48 49 50
AT (273) 25 26 47
FOLLOW (274) 79
PLUS (275) 69
MINUS (276) 70
EQUAL (277) 71 75
TILDE (278) 49 50
PERCT (279) 66
DOLLAR (280) 24
CARET (281) 23
TREE (282) 42
ROOT (283) 22
LEN (284)
SEQ (285) 32
TERM (286) 26
PTREE (287) 43
EQUAL_OP (288) 72
NOT_EQUAL_OP (289) 73
LIKE (290) 74
LEFT_ARROW (291) 76
RIGHT_ARROW (292) 77
UD_LINK (293) 78
INT (294) 25 26 41 53 54 55 59 60 61
STRING (295) 45 46 47 48 49 50 54 55 60 61 62 63 66
QSTRING (296) 28 29 30 31 34 35 38 39 66
COMMENTSTR (297) 67 68


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
rule_set (44)
    on left: 1, on right: 0
rule_list (45)
    on left: 2 3, on right: 1 2
rule (46)
    on left: 4 5 6, on right: 2 3
rule_aux (47)
    on left: 7 8 9 10, on right: 5 9 10
node_list (48)
    on left: 11 12 13, on right: 4 5 6 11 13 15
node (49)
    on left: 14 15 16 17 18, on right: 11 12 13 17 19 20 21
node_set (50)
    on left: 19 20, on right: 16 19
head_node (51)
    on left: 21 22, on right: 18
node_content (52)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40,
    on right: 14
ref (53)
    on left: 41, on right: 40
tree_var (54)
    on left: 42 43, on right: 33 34 35 36 37 38
tree_pos (55)
    on left: 44 45, on right: 27 32 33 34 37 39 40
node_constraint (56)
    on left: 46 47 48 49 50, on right: 36 37 38
rule_head (57)
    on left: 51 52, on right: 4 5
rule_info (58)
    on left: 53 54 55, on right: 51 52
rule_cons_list (59)
    on left: 56 57, on right: 8 10 57
rule_constraint (60)
    on left: 58 59, on right: 56 57
constraint_expr (61)
    on left: 60 61 62 63, on right: 58 59
prop_list (62)
    on left: 64 65, on right: 7 9 65
prop_expr (63)
    on left: 66, on right: 64 65
comments (64)
    on left: 67 68, on right: 6 51 68
valence (65)
    on left: 69 70 71, on right: 58 59
rel_op (66)
    on left: 72 73 74 75, on right: 60 63
node_conn_op (67)
    on left: 76 77 78 79, on right: 13


State 0

    0 $accept: . rule_set $end

    INT         shift, and go to state 1
    COMMENTSTR  shift, and go to state 2

    rule_set   go to state 3
    rule_list  go to state 4
    rule       go to state 5
    rule_head  go to state 6
    rule_info  go to state 7
    comments   go to state 8


State 1

   53 rule_info: INT . COLON
   54          | INT . COLON STRING COLON
   55          | INT . COLON STRING COLON STRING COLON

    COLON  shift, and go to state 9


State 2

   67 comments: COMMENTSTR .

    $default  reduce using rule 67 (comments)


State 3

    0 $accept: rule_set . $end

    $end  shift, and go to state 10


State 4

    1 rule_set: rule_list .
    2 rule_list: rule_list . rule

    INT         shift, and go to state 1
    COMMENTSTR  shift, and go to state 2

    $default  reduce using rule 1 (rule_set)

    rule       go to state 11
    rule_head  go to state 6
    rule_info  go to state 7
    comments   go to state 8


State 5

    3 rule_list: rule .

    $default  reduce using rule 3 (rule_list)


State 6

    4 rule: rule_head . node_list
    5     | rule_head . rule_aux node_list

    GROUP_START  shift, and go to state 12
    LEFT_AB      shift, and go to state 13
    LEFT_SB      shift, and go to state 14
    LEFT_P       shift, and go to state 15
    PLUS         shift, and go to state 16
    MINUS        shift, and go to state 17
    EQUAL        shift, and go to state 18
    PERCT        shift, and go to state 19

    rule_aux         go to state 20
    node_list        go to state 21
    node             go to state 22
    head_node        go to state 23
    rule_cons_list   go to state 24
    rule_constraint  go to state 25
    prop_list        go to state 26
    prop_expr        go to state 27
    valence          go to state 28


State 7

   52 rule_head: rule_info .

    $default  reduce using rule 52 (rule_head)


State 8

    6 rule: comments . node_list
   51 rule_head: comments . rule_info
   68 comments: comments . COMMENTSTR

    GROUP_START  shift, and go to state 12
    LEFT_AB      shift, and go to state 13
    LEFT_SB      shift, and go to state 14
    LEFT_P       shift, and go to state 15
    INT          shift, and go to state 1
    COMMENTSTR   shift, and go to state 29

    node_list  go to state 30
    node       go to state 22
    head_node  go to state 23
    rule_info  go to state 31


State 9

   53 rule_info: INT COLON .
   54          | INT COLON . STRING COLON
   55          | INT COLON . STRING COLON STRING COLON

    STRING  shift, and go to state 32

    $default  reduce using rule 53 (rule_info)


State 10

    0 $accept: rule_set $end .

    $default  accept


State 11

    2 rule_list: rule_list rule .

    $default  reduce using rule 2 (rule_list)


State 12

   14 node: GROUP_START . node_content GROUP_END

    ASTERISK  shift, and go to state 33
    DOT       shift, and go to state 34
    AT        shift, and go to state 35
    DOLLAR    shift, and go to state 36
    CARET     shift, and go to state 37
    TREE      shift, and go to state 38
    SEQ       shift, and go to state 39
    TERM      shift, and go to state 40
    PTREE     shift, and go to state 41
    STRING    shift, and go to state 42
    QSTRING   shift, and go to state 43

    node_content  go to state 44
    tree_var      go to state 45
    tree_pos      go to state 46


State 13

   21 head_node: LEFT_AB . node RIGHT_AB
   22          | LEFT_AB . ROOT RIGHT_AB

    GROUP_START  shift, and go to state 12
    LEFT_AB      shift, and go to state 13
    LEFT_SB      shift, and go to state 14
    LEFT_P       shift, and go to state 15
    ROOT         shift, and go to state 47

    node       go to state 48
    head_node  go to state 23


State 14

   17 node: LEFT_SB . node RIGHT_SB

    GROUP_START  shift, and go to state 12
    LEFT_AB      shift, and go to state 13
    LEFT_SB      shift, and go to state 14
    LEFT_P       shift, and go to state 15

    node       go to state 49
    head_node  go to state 23


State 15

   15 node: LEFT_P . node_list RIGHT_P
   16     | LEFT_P . node_set RIGHT_P

    GROUP_START  shift, and go to state 12
    LEFT_AB      shift, and go to state 13
    LEFT_SB      shift, and go to state 14
    LEFT_P       shift, and go to state 15

    node_list  go to state 50
    node       go to state 51
    node_set   go to state 52
    head_node  go to state 23


State 16

   69 valence: PLUS .

    $default  reduce using rule 69 (valence)


State 17

   70 valence: MINUS .

    $default  reduce using rule 70 (valence)


State 18

   71 valence: EQUAL .

    $default  reduce using rule 71 (valence)


State 19

   66 prop_expr: PERCT . STRING COLON QSTRING

    STRING  shift, and go to state 53


State 20

    5 rule: rule_head rule_aux . node_list
    9 rule_aux: rule_aux . prop_list
   10         | rule_aux . rule_cons_list

    GROUP_START  shift, and go to state 12
    LEFT_AB      shift, and go to state 13
    LEFT_SB      shift, and go to state 14
    LEFT_P       shift, and go to state 15
    PLUS         shift, and go to state 16
    MINUS        shift, and go to state 17
    EQUAL        shift, and go to state 18
    PERCT        shift, and go to state 19

    node_list        go to state 54
    node             go to state 22
    head_node        go to state 23
    rule_cons_list   go to state 55
    rule_constraint  go to state 25
    prop_list        go to state 56
    prop_expr        go to state 27
    valence          go to state 28


State 21

    4 rule: rule_head node_list .
   11 node_list: node_list . node
   13          | node_list . node_conn_op node

    GROUP_START  shift, and go to state 12
    LEFT_AB      shift, and go to state 13
    LEFT_SB      shift, and go to state 14
    LEFT_P       shift, and go to state 15
    FOLLOW       shift, and go to state 57
    LEFT_ARROW   shift, and go to state 58
    RIGHT_ARROW  shift, and go to state 59
    UD_LINK      shift, and go to state 60

    $default  reduce using rule 4 (rule)

    node          go to state 61
    head_node     go to state 23
    node_conn_op  go to state 62


State 22

   12 node_list: node .

    $default  reduce using rule 12 (node_list)


State 23

   18 node: head_node .

    $default  reduce using rule 18 (node)


State 24

    8 rule_aux: rule_cons_list .
   57 rule_cons_list: rule_cons_list . rule_constraint

    PLUS   shift, and go to state 16
    MINUS  shift, and go to state 17
    EQUAL  shift, and go to state 18

    PLUS      [reduce using rule 8 (rule_aux)]
    MINUS     [reduce using rule 8 (rule_aux)]
    EQUAL     [reduce using rule 8 (rule_aux)]
    $default  reduce using rule 8 (rule_aux)

    rule_constraint  go to state 63
    valence          go to state 28


State 25

   56 rule_cons_list: rule_constraint .

    $default  reduce using rule 56 (rule_cons_list)


State 26

    7 rule_aux: prop_list .
   65 prop_list: prop_list . prop_expr

    PERCT  shift, and go to state 19

    PERCT     [reduce using rule 7 (rule_aux)]
    $default  reduce using rule 7 (rule_aux)

    prop_expr  go to state 64


State 27

   64 prop_list: prop_expr .

    $default  reduce using rule 64 (prop_list)


State 28

   58 rule_constraint: valence . constraint_expr
   59                | valence . constraint_expr COLON INT

    STRING  shift, and go to state 65

    constraint_expr  go to state 66


State 29

   68 comments: comments COMMENTSTR .

    $default  reduce using rule 68 (comments)


State 30

    6 rule: comments node_list .
   11 node_list: node_list . node
   13          | node_list . node_conn_op node

    GROUP_START  shift, and go to state 12
    LEFT_AB      shift, and go to state 13
    LEFT_SB      shift, and go to state 14
    LEFT_P       shift, and go to state 15
    FOLLOW       shift, and go to state 57
    LEFT_ARROW   shift, and go to state 58
    RIGHT_ARROW  shift, and go to state 59
    UD_LINK      shift, and go to state 60

    $default  reduce using rule 6 (rule)

    node          go to state 61
    head_node     go to state 23
    node_conn_op  go to state 62


State 31

   51 rule_head: comments rule_info .

    $default  reduce using rule 51 (rule_head)


State 32

   54 rule_info: INT COLON STRING . COLON
   55          | INT COLON STRING . COLON STRING COLON

    COLON  shift, and go to state 67


State 33

   44 tree_pos: ASTERISK .

    $default  reduce using rule 44 (tree_pos)


State 34

   29 node_content: DOT . DOT DOT QSTRING
   30             | DOT . DOT DOT QSTRING DOT DOT DOT

    DOT  shift, and go to state 68


State 35

   25 node_content: AT . INT

    INT  shift, and go to state 69


State 36

   24 node_content: DOLLAR .

    $default  reduce using rule 24 (node_content)


State 37

   23 node_content: CARET .

    $default  reduce using rule 23 (node_content)


State 38

   42 tree_var: TREE .

    $default  reduce using rule 42 (tree_var)


State 39

   32 node_content: SEQ . COLON tree_pos

    COLON  shift, and go to state 70


State 40

   26 node_content: TERM . AT INT

    AT  shift, and go to state 71


State 41

   43 tree_var: PTREE .

    $default  reduce using rule 43 (tree_var)


State 42

   45 tree_pos: STRING .

    $default  reduce using rule 45 (tree_pos)


State 43

   28 node_content: QSTRING .
   31             | QSTRING . DOT DOT DOT

    DOT  shift, and go to state 72

    $default  reduce using rule 28 (node_content)


State 44

   14 node: GROUP_START node_content . GROUP_END

    GROUP_END  shift, and go to state 73


State 45

   33 node_content: tree_var . COLON tree_pos
   34             | tree_var . COLON tree_pos COLON QSTRING
   35             | tree_var . COLON QSTRING
   36             | tree_var . node_constraint
   37             | tree_var . node_constraint COLON tree_pos
   38             | tree_var . node_constraint COLON QSTRING

    COLON  shift, and go to state 74
    DOT    shift, and go to state 75
    AT     shift, and go to state 76

    node_constraint  go to state 77


State 46

   27 node_content: tree_pos .
   39             | tree_pos . COLON QSTRING
   40             | tree_pos . COLON ref

    COLON  shift, and go to state 78

    $default  reduce using rule 27 (node_content)


State 47

   22 head_node: LEFT_AB ROOT . RIGHT_AB

    RIGHT_AB  shift, and go to state 79


State 48

   21 head_node: LEFT_AB node . RIGHT_AB

    RIGHT_AB  shift, and go to state 80


State 49

   17 node: LEFT_SB node . RIGHT_SB

    RIGHT_SB  shift, and go to state 81


State 50

   11 node_list: node_list . node
   13          | node_list . node_conn_op node
   15 node: LEFT_P node_list . RIGHT_P

    GROUP_START  shift, and go to state 12
    LEFT_AB      shift, and go to state 13
    LEFT_SB      shift, and go to state 14
    LEFT_P       shift, and go to state 15
    RIGHT_P      shift, and go to state 82
    FOLLOW       shift, and go to state 57
    LEFT_ARROW   shift, and go to state 58
    RIGHT_ARROW  shift, and go to state 59
    UD_LINK      shift, and go to state 60

    node          go to state 61
    head_node     go to state 23
    node_conn_op  go to state 62


State 51

   12 node_list: node .
   20 node_set: node . VBAR node

    VBAR  shift, and go to state 83

    $default  reduce using rule 12 (node_list)


State 52

   16 node: LEFT_P node_set . RIGHT_P
   19 node_set: node_set . VBAR node

    RIGHT_P  shift, and go to state 84
    VBAR     shift, and go to state 85


State 53

   66 prop_expr: PERCT STRING . COLON QSTRING

    COLON  shift, and go to state 86


State 54

    5 rule: rule_head rule_aux node_list .
   11 node_list: node_list . node
   13          | node_list . node_conn_op node

    GROUP_START  shift, and go to state 12
    LEFT_AB      shift, and go to state 13
    LEFT_SB      shift, and go to state 14
    LEFT_P       shift, and go to state 15
    FOLLOW       shift, and go to state 57
    LEFT_ARROW   shift, and go to state 58
    RIGHT_ARROW  shift, and go to state 59
    UD_LINK      shift, and go to state 60

    $default  reduce using rule 5 (rule)

    node          go to state 61
    head_node     go to state 23
    node_conn_op  go to state 62


State 55

   10 rule_aux: rule_aux rule_cons_list .
   57 rule_cons_list: rule_cons_list . rule_constraint

    PLUS   shift, and go to state 16
    MINUS  shift, and go to state 17
    EQUAL  shift, and go to state 18

    PLUS      [reduce using rule 10 (rule_aux)]
    MINUS     [reduce using rule 10 (rule_aux)]
    EQUAL     [reduce using rule 10 (rule_aux)]
    $default  reduce using rule 10 (rule_aux)

    rule_constraint  go to state 63
    valence          go to state 28


State 56

    9 rule_aux: rule_aux prop_list .
   65 prop_list: prop_list . prop_expr

    PERCT  shift, and go to state 19

    PERCT     [reduce using rule 9 (rule_aux)]
    $default  reduce using rule 9 (rule_aux)

    prop_expr  go to state 64


State 57

   79 node_conn_op: FOLLOW .

    $default  reduce using rule 79 (node_conn_op)


State 58

   76 node_conn_op: LEFT_ARROW .

    $default  reduce using rule 76 (node_conn_op)


State 59

   77 node_conn_op: RIGHT_ARROW .

    $default  reduce using rule 77 (node_conn_op)


State 60

   78 node_conn_op: UD_LINK .

    $default  reduce using rule 78 (node_conn_op)


State 61

   11 node_list: node_list node .

    $default  reduce using rule 11 (node_list)


State 62

   13 node_list: node_list node_conn_op . node

    GROUP_START  shift, and go to state 12
    LEFT_AB      shift, and go to state 13
    LEFT_SB      shift, and go to state 14
    LEFT_P       shift, and go to state 15

    node       go to state 87
    head_node  go to state 23


State 63

   57 rule_cons_list: rule_cons_list rule_constraint .

    $default  reduce using rule 57 (rule_cons_list)


State 64

   65 prop_list: prop_list prop_expr .

    $default  reduce using rule 65 (prop_list)


State 65

   60 constraint_expr: STRING . LEFT_P INT RIGHT_P rel_op STRING
   61                | STRING . LEFT_P INT RIGHT_P
   62                | STRING . LEFT_P RIGHT_P
   63                | STRING . rel_op STRING

    LEFT_P        shift, and go to state 88
    EQUAL         shift, and go to state 89
    EQUAL_OP      shift, and go to state 90
    NOT_EQUAL_OP  shift, and go to state 91
    LIKE          shift, and go to state 92

    rel_op  go to state 93


State 66

   58 rule_constraint: valence constraint_expr .
   59                | valence constraint_expr . COLON INT

    COLON  shift, and go to state 94

    $default  reduce using rule 58 (rule_constraint)


State 67

   54 rule_info: INT COLON STRING COLON .
   55          | INT COLON STRING COLON . STRING COLON

    STRING  shift, and go to state 95

    $default  reduce using rule 54 (rule_info)


State 68

   29 node_content: DOT DOT . DOT QSTRING
   30             | DOT DOT . DOT QSTRING DOT DOT DOT

    DOT  shift, and go to state 96


State 69

   25 node_content: AT INT .

    $default  reduce using rule 25 (node_content)


State 70

   32 node_content: SEQ COLON . tree_pos

    ASTERISK  shift, and go to state 33
    STRING    shift, and go to state 42

    tree_pos  go to state 97


State 71

   26 node_content: TERM AT . INT

    INT  shift, and go to state 98


State 72

   31 node_content: QSTRING DOT . DOT DOT

    DOT  shift, and go to state 99


State 73

   14 node: GROUP_START node_content GROUP_END .

    $default  reduce using rule 14 (node)


State 74

   33 node_content: tree_var COLON . tree_pos
   34             | tree_var COLON . tree_pos COLON QSTRING
   35             | tree_var COLON . QSTRING

    ASTERISK  shift, and go to state 33
    STRING    shift, and go to state 42
    QSTRING   shift, and go to state 100

    tree_pos  go to state 101


State 75

   46 node_constraint: DOT . STRING DOT STRING
   48                | DOT . STRING
   49                | DOT . TILDE STRING
   50                | DOT . TILDE STRING DOT STRING

    TILDE   shift, and go to state 102
    STRING  shift, and go to state 103


State 76

   47 node_constraint: AT . STRING

    STRING  shift, and go to state 104


State 77

   36 node_content: tree_var node_constraint .
   37             | tree_var node_constraint . COLON tree_pos
   38             | tree_var node_constraint . COLON QSTRING

    COLON  shift, and go to state 105

    $default  reduce using rule 36 (node_content)


State 78

   39 node_content: tree_pos COLON . QSTRING
   40             | tree_pos COLON . ref

    INT      shift, and go to state 106
    QSTRING  shift, and go to state 107

    ref  go to state 108


State 79

   22 head_node: LEFT_AB ROOT RIGHT_AB .

    $default  reduce using rule 22 (head_node)


State 80

   21 head_node: LEFT_AB node RIGHT_AB .

    $default  reduce using rule 21 (head_node)


State 81

   17 node: LEFT_SB node RIGHT_SB .

    $default  reduce using rule 17 (node)


State 82

   15 node: LEFT_P node_list RIGHT_P .

    $default  reduce using rule 15 (node)


State 83

   20 node_set: node VBAR . node

    GROUP_START  shift, and go to state 12
    LEFT_AB      shift, and go to state 13
    LEFT_SB      shift, and go to state 14
    LEFT_P       shift, and go to state 15

    node       go to state 109
    head_node  go to state 23


State 84

   16 node: LEFT_P node_set RIGHT_P .

    $default  reduce using rule 16 (node)


State 85

   19 node_set: node_set VBAR . node

    GROUP_START  shift, and go to state 12
    LEFT_AB      shift, and go to state 13
    LEFT_SB      shift, and go to state 14
    LEFT_P       shift, and go to state 15

    node       go to state 110
    head_node  go to state 23


State 86

   66 prop_expr: PERCT STRING COLON . QSTRING

    QSTRING  shift, and go to state 111


State 87

   13 node_list: node_list node_conn_op node .

    $default  reduce using rule 13 (node_list)


State 88

   60 constraint_expr: STRING LEFT_P . INT RIGHT_P rel_op STRING
   61                | STRING LEFT_P . INT RIGHT_P
   62                | STRING LEFT_P . RIGHT_P

    RIGHT_P  shift, and go to state 112
    INT      shift, and go to state 113


State 89

   75 rel_op: EQUAL .

    $default  reduce using rule 75 (rel_op)


State 90

   72 rel_op: EQUAL_OP .

    $default  reduce using rule 72 (rel_op)


State 91

   73 rel_op: NOT_EQUAL_OP .

    $default  reduce using rule 73 (rel_op)


State 92

   74 rel_op: LIKE .

    $default  reduce using rule 74 (rel_op)


State 93

   63 constraint_expr: STRING rel_op . STRING

    STRING  shift, and go to state 114


State 94

   59 rule_constraint: valence constraint_expr COLON . INT

    INT  shift, and go to state 115


State 95

   55 rule_info: INT COLON STRING COLON STRING . COLON

    COLON  shift, and go to state 116


State 96

   29 node_content: DOT DOT DOT . QSTRING
   30             | DOT DOT DOT . QSTRING DOT DOT DOT

    QSTRING  shift, and go to state 117


State 97

   32 node_content: SEQ COLON tree_pos .

    $default  reduce using rule 32 (node_content)


State 98

   26 node_content: TERM AT INT .

    $default  reduce using rule 26 (node_content)


State 99

   31 node_content: QSTRING DOT DOT . DOT

    DOT  shift, and go to state 118


State 100

   35 node_content: tree_var COLON QSTRING .

    $default  reduce using rule 35 (node_content)


State 101

   33 node_content: tree_var COLON tree_pos .
   34             | tree_var COLON tree_pos . COLON QSTRING

    COLON  shift, and go to state 119

    $default  reduce using rule 33 (node_content)


State 102

   49 node_constraint: DOT TILDE . STRING
   50                | DOT TILDE . STRING DOT STRING

    STRING  shift, and go to state 120


State 103

   46 node_constraint: DOT STRING . DOT STRING
   48                | DOT STRING .

    DOT  shift, and go to state 121

    $default  reduce using rule 48 (node_constraint)


State 104

   47 node_constraint: AT STRING .

    $default  reduce using rule 47 (node_constraint)


State 105

   37 node_content: tree_var node_constraint COLON . tree_pos
   38             | tree_var node_constraint COLON . QSTRING

    ASTERISK  shift, and go to state 33
    STRING    shift, and go to state 42
    QSTRING   shift, and go to state 122

    tree_pos  go to state 123


State 106

   41 ref: INT .

    $default  reduce using rule 41 (ref)


State 107

   39 node_content: tree_pos COLON QSTRING .

    $default  reduce using rule 39 (node_content)


State 108

   40 node_content: tree_pos COLON ref .

    $default  reduce using rule 40 (node_content)


State 109

   20 node_set: node VBAR node .

    $default  reduce using rule 20 (node_set)


State 110

   19 node_set: node_set VBAR node .

    $default  reduce using rule 19 (node_set)


State 111

   66 prop_expr: PERCT STRING COLON QSTRING .

    $default  reduce using rule 66 (prop_expr)


State 112

   62 constraint_expr: STRING LEFT_P RIGHT_P .

    $default  reduce using rule 62 (constraint_expr)


State 113

   60 constraint_expr: STRING LEFT_P INT . RIGHT_P rel_op STRING
   61                | STRING LEFT_P INT . RIGHT_P

    RIGHT_P  shift, and go to state 124


State 114

   63 constraint_expr: STRING rel_op STRING .

    $default  reduce using rule 63 (constraint_expr)


State 115

   59 rule_constraint: valence constraint_expr COLON INT .

    $default  reduce using rule 59 (rule_constraint)


State 116

   55 rule_info: INT COLON STRING COLON STRING COLON .

    $default  reduce using rule 55 (rule_info)


State 117

   29 node_content: DOT DOT DOT QSTRING .
   30             | DOT DOT DOT QSTRING . DOT DOT DOT

    DOT  shift, and go to state 125

    $default  reduce using rule 29 (node_content)


State 118

   31 node_content: QSTRING DOT DOT DOT .

    $default  reduce using rule 31 (node_content)


State 119

   34 node_content: tree_var COLON tree_pos COLON . QSTRING

    QSTRING  shift, and go to state 126


State 120

   49 node_constraint: DOT TILDE STRING .
   50                | DOT TILDE STRING . DOT STRING

    DOT  shift, and go to state 127

    $default  reduce using rule 49 (node_constraint)


State 121

   46 node_constraint: DOT STRING DOT . STRING

    STRING  shift, and go to state 128


State 122

   38 node_content: tree_var node_constraint COLON QSTRING .

    $default  reduce using rule 38 (node_content)


State 123

   37 node_content: tree_var node_constraint COLON tree_pos .

    $default  reduce using rule 37 (node_content)


State 124

   60 constraint_expr: STRING LEFT_P INT RIGHT_P . rel_op STRING
   61                | STRING LEFT_P INT RIGHT_P .

    EQUAL         shift, and go to state 89
    EQUAL_OP      shift, and go to state 90
    NOT_EQUAL_OP  shift, and go to state 91
    LIKE          shift, and go to state 92

    EQUAL     [reduce using rule 61 (constraint_expr)]
    $default  reduce using rule 61 (constraint_expr)

    rel_op  go to state 129


State 125

   30 node_content: DOT DOT DOT QSTRING DOT . DOT DOT

    DOT  shift, and go to state 130


State 126

   34 node_content: tree_var COLON tree_pos COLON QSTRING .

    $default  reduce using rule 34 (node_content)


State 127

   50 node_constraint: DOT TILDE STRING DOT . STRING

    STRING  shift, and go to state 131


State 128

   46 node_constraint: DOT STRING DOT STRING .

    $default  reduce using rule 46 (node_constraint)


State 129

   60 constraint_expr: STRING LEFT_P INT RIGHT_P rel_op . STRING

    STRING  shift, and go to state 132


State 130

   30 node_content: DOT DOT DOT QSTRING DOT DOT . DOT

    DOT  shift, and go to state 133


State 131

   50 node_constraint: DOT TILDE STRING DOT STRING .

    $default  reduce using rule 50 (node_constraint)


State 132

   60 constraint_expr: STRING LEFT_P INT RIGHT_P rel_op STRING .

    $default  reduce using rule 60 (constraint_expr)


State 133

   30 node_content: DOT DOT DOT QSTRING DOT DOT DOT .

    $default  reduce using rule 30 (node_content)
